allprojects {
    apply plugin: 'com.jfrog.artifactory-upload'
    version = "${version}"

    repositories {
        maven {
            url "http://artifactory.mtm.se:8081/artifactory/repo"
        }
        jcenter()    }

    configurations {
        published
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'jacoco'
    apply plugin: 'pmd'

    group = 'se.mtm.production.speech.synthesis'

    dependencies {
        testCompile "junit:junit:4.12"
    }

    manifest {
        attributes 'provider': 'gradle'
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        from javadoc.destinationDir
        classifier = 'javadoc'
    }

    artifactoryPublish {
        dependsOn jar, sourceJar, javadocJar
    }

    artifacts {
        published jar
        published sourceJar
        published javadocJar
    }

    pmd {
        toolVersion = '5.3.1'
        // ignoreFailures = true
        ruleSets = [
                'java-basic',
                'java-braces',
                'java-clone',
                'java-empty',
                'java-finalizers',
                'java-logging-jakarta-commons',
                'java-migrating',
                'java-strings',
                'java-sunsecure',
                'java-unnecessary',
                'java-unusedcode',
        ]
        ruleSetFiles = files("$rootProject.projectDir/custom-pmd-ruleset.xml")
    }
}

artifactory {
    contextUrl = 'http://codestore.mtm.se:8081/artifactory'
    publish {
        repository {
            repoKey = 'libs-snapshot-local'
            username = "${mavenCredentialUsr}"
            password = "${mavenCredentialPwd}"
        }
        defaults {
            publishConfigs('published')
            publishPom = false
            publishIvy = false
        }
    }
    resolve {
        repository {
            repoKey = 'libs-both'
            username = "${mavenCredentialUsr}"
            password = "${mavenCredentialPwd}"
            maven = true
        }
    }
}

buildscript {
    repositories {
        maven {
            url "http://artifactory.mtm.se:8081/artifactory/repo"
        }
        jcenter()
        dependencies {
            classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.0'
            classpath 'com.netflix.nebula:gradle-ospackage-plugin:2.2.6'
            classpath 'se.mtm.gradle:gradle-artifactory-rpm-plugin:1.0.17'
            classpath 'se.mtm.gradle:gradle-puppet-plugin:1.0.2'
        }
    }
}
